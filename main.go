package main

import (
	"log"

	"github.com/gofiber/fiber/v2"
	fiberSwagger "github.com/swaggo/fiber-swagger"
	_ "github.com/swaggo/fiber-swagger/example/docs" // docs is generated by Swag CLI, you have to import it.
)

// @title Swagger Example API
// @version 1.0
// @description This is a sample server Petstore server.
// @termsOfService http://swagger.io/terms/

// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host petstore.swagger.io
// @BasePath /v2
func main() {
	app := fiber.New()

	app.Get("/healthcheck/:id", HealthCheck)

	app.Get("/swagger/*", fiberSwagger.WrapHandler)

	err := app.Listen(":1323")
	if err != nil {
		log.Fatalf("fiber.Listen failed %s", err)
	}
}

type HealthCheckRequest struct {
	GroupId int    `json:"group_id" example:"1"`
	Name    string `json:"name"`
}

type Order struct {
	Id   uint        `json:"id"`
	Data interface{} `json:"data"`
}

// HealthCheck godoc
// @Summary Show the status of server.
// @Description get the status of server.
// @Tags root
// @Param group_id   path int true "Group ID"
// @Param request body HealthCheckRequest true "body params"
// @Accept application/json
// @Produce json
// @Success 200 {object} Order
// @Router /healthcheck/{group_id} [get]
func HealthCheck(c *fiber.Ctx) error {
	res := Order{
		Id:   1,
		Data: "OK",
	}

	if err := c.JSON(res); err != nil {
		return err
	}

	return nil
}
